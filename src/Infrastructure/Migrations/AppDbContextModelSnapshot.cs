// <auto-generated />
using System;
using CDNConverter.API.Infrastructure.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CDNConverter.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CDNConverter.Entities.ConvertedLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConvertedLogPath")
                        .IsRequired();

                    b.Property<DateTime>("CreatedOn");

                    b.Property<Guid>("OriginalLogId");

                    b.HasKey("Id");

                    b.HasIndex("OriginalLogId")
                        .IsUnique();

                    b.ToTable("ConvertedLogs");
                });

            modelBuilder.Entity("CDNConverter.Entities.OriginalLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("OriginalLogPath")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("OriginalLogs");
                });

            modelBuilder.Entity("CDNConverter.Entities.ConvertedLog", b =>
                {
                    b.HasOne("CDNConverter.Entities.OriginalLog", "OriginalLog")
                        .WithOne()
                        .HasForeignKey("CDNConverter.Entities.ConvertedLog", "OriginalLogId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
